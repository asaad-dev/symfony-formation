***********************************
               SYMFONY  
***********************************
un framework PHP (cadriciel), une boîte à outils logicielle. CRUD (Create / Read / Update / Delete) -> Symfony va nous permettre de faciliter le développement d'applis en PHP

 * logiciel libre créé en 2009 par Fabien Potencier 
 * v.5.2
 * c'est un ensemble de composants (components) dont le coeur s'appelle le kernel en anglais (noyau). On peut installer uniquement le kernel mais son fonctionnement sera limité. il faudra installer d'autres composants.

***********************************
            LES COMPOSANTS   
***********************************
 - doctrine : gère la BDD / ORM (object relation manager) -> dans l'appli symfony on ne connaît que l'ORM
 - twig : va servir à faire des templates (gabarit) HTML
 - monolog : outil pour gérer les journaux de logiciels (historique, journaux d'utilisation)
 - API : sert à créer une architecture pour que le dev front puisse accéder à ses données

On peut utiliser chacun de ses composants séparemment 
Ce composants sont installés avec un outil PHP -> Composer 

***********************************
      composer require doctrine
***********************************

Les répertoires :
- bin : fichiers exécutables, des outils pour nous simplifier la vie (console, phpunit, etc.)
- config : contient les fichers de configuration de symfony et de ses composants
- migrations : doctrine va versionner l'évolution de la structure de la BDD (fichier php)
- public : c'est le dossier qu'il faudra rendre acessible par le serveur http://
- src : c'est le code de notre application
- template : c'est le dossier qui contiendra les gabarit HTML
- test : l'endorit ou l'on ecrira nos testsuite
- translations : traduction 
- var : c'est un dossier de fichier temporaire de symfony : le cache et les journaux
- vendor : il n'est pas lié à symfony mais à composer qui stocke à cet endroit tous les fichiers

fichier racine :
- .env : c'est un fichier de configuration pour notre environment (connexion a la BDD)
- composer.json : c'est le fichier utile a composer pour paramétrer ce paquet

Flex : 
- Aucun rapport avec flex de CSS 
- Flex dans le sens de symfony flex est un logiciel qui sert l'installation des components.
- Les developpeurs écrivent des recettes qui expliquent comment s'installent les composants de symfony.

***********************************
                 MVC  
***********************************
Une façon d'écrire du code (Patron de conception, ou Pattern) en séparant 3 éléments :
   - Modéls (model) :L'ensemble du code qui va intéragir avec la BDD
   - Vue (view) : Tout ce qui concerne le rendu visuel
   - Contrôleur (controller) : Il fera le lien entre le modéle et la vue (une moyen d'une route)

Intérêt :
1/ Façon d'organiser le code à plusieurs : (ex. Pour les intégrateurs)
2/ Façon d'optimiser les performances : ex. séparant le code qui requête la BDD du code qui fait le rendu visuel.

Une route :
- Elle est légèrement différente d'une URL 
- Morceau d'URL à laquelle va correspondre une action dans notre application 
ex :
- /articles/show: récupération de tous les articles
- /articles/create : créer un article 
- /articles/1/show : afficher l'article 1
- /articles/1/update : modifier l'article 1
- /articles/1/delete : supprimer l'article 1